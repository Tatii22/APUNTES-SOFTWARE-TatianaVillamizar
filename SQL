# MySQL I
---
- **Creación**: 1995, Michael "Monty" Widenius.
- **Tipo**: Base de datos relacional de código abierto.
- **Primer lanzamiento**: 1996 (MySQL 3.11).
- **Popularidad**: 2003, usado por pequeñas y grandes empresas.
- **Adquisición**: Sun Microsystems (2008), Oracle (2010).

## Características clave:
- Arquitectura cliente-servidor.
- Compatibilidad con SQL.
- Transacciones, vistas, procedimientos almacenados.

## Ventajas:
- Código abierto, bajo costo.
- Comunidad activa.
- Flexible y escalable.

---
# Consultas Básicas con SQL - Ejemplos

## 1. Componentes principales del SQL

### 1.1. **Sentencias de Definición de Datos (DDL)**

- **`CREATE`**: Crea una nueva tabla.
  ```sql
  CREATE TABLE empleados (
      id INT PRIMARY KEY,
      nombre VARCHAR(100),
      salario DECIMAL(10, 2)
  );

- **`ALTER`**: Modifica la estructura de una tabla.
  ```sql
  ALTER TABLE empleados
  ADD COLUMN fecha_contratacion DATE;

- **`DROP`**: Elimina una tabla.
  ```sql
  DROP TABLE empleados;

## 2. Operadores
--------------

### 2.1. **Operadores de Comparación**
- **`=`**:Compara si dos valores son iguales.  
  ```sql
  SELECT * FROM empleadosWHERE salario = 50000;
  SELECT * FROM empleadosWHERE salario > 45000;
  SELECT * FROM empleadosWHERE salario <> 55000;   

### 2.2. **Operadores Lógicos**
- **`<`**:Compara si un valor es mayor que otro.
  ```sql
  SELECT * FROM empleadosWHERE salario > 40000 AND nombre = 'Juan Pérez';
  SELECT * FROM empleadosWHERE salario > 40000 OR nombre = 'Juan Pérez';
  SELECT * FROM empleadosWHERE NOT salario < 40000;

- **`<>`**: Compara si dos valores no son iguales.
  ```sql
  SELECT * FROM empleados
  WHERE salario <> 55000;

### 3. Agregación y Agrupación de Datos

### 3.1. **Funciones de Agregación**

```sql
SELECT COUNT(*) FROM empleados;
SELECT SUM(salario) FROM empleados;
SELECT AVG(salario) FROM empleados;

    
